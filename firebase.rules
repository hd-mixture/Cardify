
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // vCards can be created by any authenticated user.
    // For now, disallow read/update/delete as this is not yet implemented.
    match /vcards/{vcardId} {
      allow read, update, delete: if false;
      allow create: if request.auth != null;
    }
    
    // Card data can only be read/written by the user who owns it.
    match /cards/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Deny all other access by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
}

service firebase.storage {
  match /b/{bucket}/o {
    
    // Profile images can only be uploaded by the authenticated user to their own folder.
    // Files must be images and under 5MB.
    // Anyone can read images.
    match /profile-images/{userId}/{fileName} {
      allow read: if true;
      allow write: if request.auth != null 
                   && request.auth.uid == userId
                   && request.resource.size < 5 * 1024 * 1024
                   && request.resource.contentType.matches('image/.*');
    }

    // Deny all other access by default
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}

// --- HOW TO USE THE RULES PLAYGROUND ---

// ==========================================================
// 1. SIMULATING A SUCCESSFUL PROFILE IMAGE UPLOAD (create)
// ==========================================================
// In the Firebase Console, go to Storage -> Rules -> Rules Playground.

// --- Correct Simulation Setup ---
//
// Simulation type: create
//
// Location:
// /profile-images/aBcDeFgHiJkLmNoPqRsTuVwXyZ123/profile.jpg
//  |             |  |                               |
//  |-(folder)----|  |-(user's actual UID)-----------|
//                   |
//                   |-(filename, e.g., "profile.jpg")
//
// Authenticated: (toggle ON)
//
// Provider: google.com (or password)
//
// Firebase UID: aBcDeFgHiJkLmNoPqRsTuVwXyZ123  (MUST match the UID in the location path)
//
// (Click "Build metadata")
//
// Metadata:
//   contentType: image/jpeg
//   size: 1048576
//
// --- Expected Result: "Simulated write allowed" ---


// ==========================================================
// 2. SIMULATING A SUCCESSFUL PROFILE IMAGE READ (get)
// ==========================================================
// Any user (authenticated or not) should be able to read an image.

// --- Correct Simulation Setup ---
//
// Simulation type: get
//
// Location: /profile-images/aBcDeFgHiJkLmNoPqRsTuVwXyZ123/profile.jpg
//
// Authenticated: (toggle OFF is fine, ON also works)
//
// --- Expected Result: "Simulated read allowed" ---


// ==========================================================
// 3. SIMULATING A FAILED UPLOAD (Wrong User)
// ==========================================================
// A user trying to upload to another user's folder should be blocked.

// --- Correct Simulation Setup ---
//
// Simulation type: create
// Location: /profile-images/DIFFERENT_USER_ID/profile.jpg
// Authenticated: ON
// Firebase UID: YOUR_USER_ID
// (Build metadata as above)
//
// --- Expected Result: "Simulated write denied" ---

    